/*
 * GetAccept
 * GetAccept provides a sales enablement platform for sales to design, send, promote, track, and e-sign sales documents, leveraging sales collateral, contract management, proposals, and electronic signatures in one place.
 *
 * OpenAPI spec version: 1.6
 * Contact: integrations@getaccept.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The UsersBody model module.
 * @module model/UsersBody
 * @version 1.6
 */
export class UsersBody {
  /**
   * Constructs a new <code>UsersBody</code>.
   * @alias module:model/UsersBody
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>UsersBody</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/UsersBody} obj Optional instance to populate.
   * @return {module:model/UsersBody} The populated <code>UsersBody</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new UsersBody();
      if (data.hasOwnProperty('fullname'))
        obj.fullname = ApiClient.convertToType(data['fullname'], 'String');
      if (data.hasOwnProperty('first_name'))
        obj.firstName = ApiClient.convertToType(data['first_name'], 'String');
      if (data.hasOwnProperty('last_name'))
        obj.lastName = ApiClient.convertToType(data['last_name'], 'String');
      if (data.hasOwnProperty('email'))
        obj.email = ApiClient.convertToType(data['email'], 'String');
      if (data.hasOwnProperty('title'))
        obj.title = ApiClient.convertToType(data['title'], 'String');
      if (data.hasOwnProperty('phone'))
        obj.phone = ApiClient.convertToType(data['phone'], 'String');
      if (data.hasOwnProperty('mobile'))
        obj.mobile = ApiClient.convertToType(data['mobile'], 'String');
      if (data.hasOwnProperty('note'))
        obj.note = ApiClient.convertToType(data['note'], 'String');
      if (data.hasOwnProperty('company_name'))
        obj.companyName = ApiClient.convertToType(data['company_name'], 'String');
      if (data.hasOwnProperty('company_number'))
        obj.companyNumber = ApiClient.convertToType(data['company_number'], 'String');
    }
    return obj;
  }
}

/**
 * Use to specify full name instead of first/last name
 * @member {String} fullname
 */
UsersBody.prototype.fullname = undefined;

/**
 * First name of the contact
 * @member {String} firstName
 */
UsersBody.prototype.firstName = undefined;

/**
 * Last name of the contact
 * @member {String} lastName
 */
UsersBody.prototype.lastName = undefined;

/**
 * Email address of the contact
 * @member {String} email
 */
UsersBody.prototype.email = undefined;

/**
 * The title of the contact, ex. CEO, Sales manager
 * @member {String} title
 */
UsersBody.prototype.title = undefined;

/**
 * Phone number in international format
 * @member {String} phone
 */
UsersBody.prototype.phone = undefined;

/**
 * Mobile number in international format
 * @member {String} mobile
 */
UsersBody.prototype.mobile = undefined;

/**
 * Optional internal note for contact
 * @member {String} note
 */
UsersBody.prototype.note = undefined;

/**
 * Associated company name
 * @member {String} companyName
 */
UsersBody.prototype.companyName = undefined;

/**
 * Associated company number
 * @member {String} companyNumber
 */
UsersBody.prototype.companyNumber = undefined;

