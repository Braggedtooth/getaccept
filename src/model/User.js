/*
 * GetAccept
 * GetAccept provides a sales enablement platform for sales to design, send, promote, track, and e-sign sales documents, leveraging sales collateral, contract management, proposals, and electronic signatures in one place.
 *
 * OpenAPI spec version: 1.6
 * Contact: integrations@getaccept.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The User model module.
 * @module model/User
 * @version 1.6
 */
export class User {
  /**
   * Constructs a new <code>User</code>.
   * A user is defined by itÂ´s e-mail address and is connected to one or many entities.  ### User Roles  #### Administrator: - View all documents - Edit all documents - Change entity settings, info and billing - Add new users to the entity - Assign entity roles  #### Manager: - View team documents - Edit all documents - Add new users to the entity  ## Entity An entity is the top node and all users and corresponding documents are connected to an entity. An entity is often the same as a company, a country or a department in a large organization. 
   * @alias module:model/User
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>User</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/User} obj Optional instance to populate.
   * @return {module:model/User} The populated <code>User</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new User();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('first_name'))
        obj.firstName = ApiClient.convertToType(data['first_name'], 'String');
      if (data.hasOwnProperty('last_name'))
        obj.lastName = ApiClient.convertToType(data['last_name'], 'String');
      if (data.hasOwnProperty('email'))
        obj.email = ApiClient.convertToType(data['email'], 'String');
      if (data.hasOwnProperty('title'))
        obj.title = ApiClient.convertToType(data['title'], 'String');
      if (data.hasOwnProperty('phone'))
        obj.phone = ApiClient.convertToType(data['phone'], 'String');
      if (data.hasOwnProperty('mobile'))
        obj.mobile = ApiClient.convertToType(data['mobile'], 'String');
      if (data.hasOwnProperty('note'))
        obj.note = ApiClient.convertToType(data['note'], 'String');
      if (data.hasOwnProperty('role'))
        obj.role = ApiClient.convertToType(data['role'], 'String');
      if (data.hasOwnProperty('team_id'))
        obj.teamId = ApiClient.convertToType(data['team_id'], 'String');
      if (data.hasOwnProperty('skip_invitation'))
        obj.skipInvitation = ApiClient.convertToType(data['skip_invitation'], 'Boolean');
      if (data.hasOwnProperty('thumb_url'))
        obj.thumbUrl = ApiClient.convertToType(data['thumb_url'], 'String');
      if (data.hasOwnProperty('entity_id'))
        obj.entityId = ApiClient.convertToType(data['entity_id'], 'String');
      if (data.hasOwnProperty('entity_name'))
        obj.entityName = ApiClient.convertToType(data['entity_name'], 'String');
      if (data.hasOwnProperty('language'))
        obj.language = ApiClient.convertToType(data['language'], 'String');
      if (data.hasOwnProperty('timezone'))
        obj.timezone = ApiClient.convertToType(data['timezone'], 'String');
      if (data.hasOwnProperty('app_mode'))
        obj.appMode = ApiClient.convertToType(data['app_mode'], 'String');
      if (data.hasOwnProperty('disallow_create'))
        obj.disallowCreate = ApiClient.convertToType(data['disallow_create'], 'Boolean');
      if (data.hasOwnProperty('status'))
        obj.status = ApiClient.convertToType(data['status'], 'String');
    }
    return obj;
  }
}

/**
 * ID of the user
 * @member {String} id
 */
User.prototype.id = undefined;

/**
 * First name of the user
 * @member {String} firstName
 */
User.prototype.firstName = undefined;

/**
 * Last name of the user
 * @member {String} lastName
 */
User.prototype.lastName = undefined;

/**
 * Email address of the user
 * @member {String} email
 */
User.prototype.email = undefined;

/**
 * The title of the user, ex. CEO, Sales manager
 * @member {String} title
 */
User.prototype.title = undefined;

/**
 * Phone number in international format
 * @member {String} phone
 */
User.prototype.phone = undefined;

/**
 * Mobile number in international format
 * @member {String} mobile
 */
User.prototype.mobile = undefined;

/**
 * Optional internal note for user
 * @member {String} note
 */
User.prototype.note = undefined;

/**
 * Allowed values for the <code>role</code> property.
 * @enum {String}
 * @readonly
 */
User.RoleEnum = {
  /**
   * value: "user"
   * @const
   */
  user: "user",

  /**
   * value: "manager"
   * @const
   */
  manager: "manager",

  /**
   * value: "admin"
   * @const
   */
  admin: "admin"
};
/**
 * @member {module:model/User.RoleEnum} role
 */
User.prototype.role = undefined;

/**
 * @member {String} teamId
 */
User.prototype.teamId = undefined;

/**
 * @member {Boolean} skipInvitation
 */
User.prototype.skipInvitation = undefined;

/**
 * @member {String} thumbUrl
 */
User.prototype.thumbUrl = undefined;

/**
 * @member {String} entityId
 */
User.prototype.entityId = undefined;

/**
 * @member {String} entityName
 */
User.prototype.entityName = undefined;

/**
 * @member {String} language
 */
User.prototype.language = undefined;

/**
 * @member {String} timezone
 */
User.prototype.timezone = undefined;

/**
 * @member {String} appMode
 */
User.prototype.appMode = undefined;

/**
 * @member {Boolean} disallowCreate
 */
User.prototype.disallowCreate = undefined;

/**
 * @member {String} status
 */
User.prototype.status = undefined;

