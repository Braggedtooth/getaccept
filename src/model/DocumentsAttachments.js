/*
 * GetAccept
 * GetAccept provides a sales enablement platform for sales to design, send, promote, track, and e-sign sales documents, leveraging sales collateral, contract management, proposals, and electronic signatures in one place.
 *
 * OpenAPI spec version: 1.6
 * Contact: integrations@getaccept.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The DocumentsAttachments model module.
 * @module model/DocumentsAttachments
 * @version 1.6
 */
export class DocumentsAttachments {
  /**
   * Constructs a new <code>DocumentsAttachments</code>.
   * @alias module:model/DocumentsAttachments
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>DocumentsAttachments</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DocumentsAttachments} obj Optional instance to populate.
   * @return {module:model/DocumentsAttachments} The populated <code>DocumentsAttachments</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new DocumentsAttachments();
      if (data.hasOwnProperty('type'))
        obj.type = ApiClient.convertToType(data['type'], 'String');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('require_view'))
        obj.requireView = ApiClient.convertToType(data['require_view'], 'Boolean');
    }
    return obj;
  }
}

/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
DocumentsAttachments.TypeEnum = {
  /**
   * value: "file"
   * @const
   */
  file: "file",

  /**
   * value: "external"
   * @const
   */
  external: "external"
};
/**
 * file or external where file is an uploaded file and external is a link to an external file
 * @member {module:model/DocumentsAttachments.TypeEnum} type
 */
DocumentsAttachments.prototype.type = undefined;

/**
 * Attachment ID received from list or after upload
 * @member {String} id
 */
DocumentsAttachments.prototype.id = undefined;

/**
 * Require that recipient view the attachment
 * @member {Boolean} requireView
 */
DocumentsAttachments.prototype.requireView = undefined;

