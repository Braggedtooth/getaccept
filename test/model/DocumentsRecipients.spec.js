/*
 * GetAccept
 * GetAccept provides a sales enablement platform for sales to design, send, promote, track, and e-sign sales documents, leveraging sales collateral, contract management, proposals, and electronic signatures in one place.
 *
 * OpenAPI spec version: 1.6
 * Contact: integrations@getaccept.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.34
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GetAccept);
  }
}(this, function(expect, GetAccept) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('DocumentsRecipients', function() {
      beforeEach(function() {
        instance = new GetAccept.DocumentsRecipients();
      });

      it('should create an instance of DocumentsRecipients', function() {
        // TODO: update the code to test DocumentsRecipients
        expect(instance).to.be.a(GetAccept.DocumentsRecipients);
      });

      it('should have the property firstName (base name: "first_name")', function() {
        // TODO: update the code to test the property firstName
        expect(instance).to.have.property('firstName');
        // expect(instance.firstName).to.be(expectedValueLiteral);
      });

      it('should have the property lastName (base name: "last_name")', function() {
        // TODO: update the code to test the property lastName
        expect(instance).to.have.property('lastName');
        // expect(instance.lastName).to.be(expectedValueLiteral);
      });

      it('should have the property role (base name: "role")', function() {
        // TODO: update the code to test the property role
        expect(instance).to.have.property('role');
        // expect(instance.role).to.be(expectedValueLiteral);
      });

      it('should have the property roleName (base name: "role_name")', function() {
        // TODO: update the code to test the property roleName
        expect(instance).to.have.property('roleName');
        // expect(instance.roleName).to.be(expectedValueLiteral);
      });

      it('should have the property verifyQnaSign (base name: "verify_qna_sign")', function() {
        // TODO: update the code to test the property verifyQnaSign
        expect(instance).to.have.property('verifyQnaSign');
        // expect(instance.verifyQnaSign).to.be(expectedValueLiteral);
      });

      it('should have the property verifyQnaQuestion (base name: "verify_qna_question")', function() {
        // TODO: update the code to test the property verifyQnaQuestion
        expect(instance).to.have.property('verifyQnaQuestion');
        // expect(instance.verifyQnaQuestion).to.be(expectedValueLiteral);
      });

      it('should have the property verifyQna (base name: "verify_qna")', function() {
        // TODO: update the code to test the property verifyQna
        expect(instance).to.have.property('verifyQna');
        // expect(instance.verifyQna).to.be(expectedValueLiteral);
      });

      it('should have the property companyName (base name: "company_name")', function() {
        // TODO: update the code to test the property companyName
        expect(instance).to.have.property('companyName');
        // expect(instance.companyName).to.be(expectedValueLiteral);
      });

      it('should have the property companyNumber (base name: "company_number")', function() {
        // TODO: update the code to test the property companyNumber
        expect(instance).to.have.property('companyNumber');
        // expect(instance.companyNumber).to.be(expectedValueLiteral);
      });

      it('should have the property verifyQnaOpen (base name: "verify_qna_open")', function() {
        // TODO: update the code to test the property verifyQnaOpen
        expect(instance).to.have.property('verifyQnaOpen');
        // expect(instance.verifyQnaOpen).to.be(expectedValueLiteral);
      });

      it('should have the property verifyQnaAnswer (base name: "verify_qna_answer")', function() {
        // TODO: update the code to test the property verifyQnaAnswer
        expect(instance).to.have.property('verifyQnaAnswer');
        // expect(instance.verifyQnaAnswer).to.be(expectedValueLiteral);
      });

      it('should have the property verifySmsSign (base name: "verify_sms_sign")', function() {
        // TODO: update the code to test the property verifySmsSign
        expect(instance).to.have.property('verifySmsSign');
        // expect(instance.verifySmsSign).to.be(expectedValueLiteral);
      });

      it('should have the property verifyEidType (base name: "verify_eid_type")', function() {
        // TODO: update the code to test the property verifyEidType
        expect(instance).to.have.property('verifyEidType');
        // expect(instance.verifyEidType).to.be(expectedValueLiteral);
      });

      it('should have the property note (base name: "note")', function() {
        // TODO: update the code to test the property note
        expect(instance).to.have.property('note');
        // expect(instance.note).to.be(expectedValueLiteral);
      });

      it('should have the property email (base name: "email")', function() {
        // TODO: update the code to test the property email
        expect(instance).to.have.property('email');
        // expect(instance.email).to.be(expectedValueLiteral);
      });

      it('should have the property mobile (base name: "mobile")', function() {
        // TODO: update the code to test the property mobile
        expect(instance).to.have.property('mobile');
        // expect(instance.mobile).to.be(expectedValueLiteral);
      });

      it('should have the property verifySms (base name: "verify_sms")', function() {
        // TODO: update the code to test the property verifySms
        expect(instance).to.have.property('verifySms');
        // expect(instance.verifySms).to.be(expectedValueLiteral);
      });

      it('should have the property verifySmsOpen (base name: "verify_sms_open")', function() {
        // TODO: update the code to test the property verifySmsOpen
        expect(instance).to.have.property('verifySmsOpen');
        // expect(instance.verifySmsOpen).to.be(expectedValueLiteral);
      });

      it('should have the property orderNum (base name: "order_num")', function() {
        // TODO: update the code to test the property orderNum
        expect(instance).to.have.property('orderNum');
        // expect(instance.orderNum).to.be(expectedValueLiteral);
      });

      it('should have the property verifyEid (base name: "verify_eid")', function() {
        // TODO: update the code to test the property verifyEid
        expect(instance).to.have.property('verifyEid');
        // expect(instance.verifyEid).to.be(expectedValueLiteral);
      });

    });
  });

}));
